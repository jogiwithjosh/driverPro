package com.handbrakers.entity;

// Generated 9 Sep, 2016 2:56:29 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = {
		@UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "username"),
		@UniqueConstraint(columnNames = "phone_number") })
public class Users implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2568374877661679451L;
	private Long userId;
	private String email;
	private String username;
	private String password;
	private String phoneNumber;
	private boolean isAccountLocked;
	private boolean isEmailVerified;
	private boolean isPhoneNumberVerified;
	private Date emailVerifiedTs;
	private Date phoneNumberVerifiedTs;
	private Date registeredTs;
	private Date updatedTs;
	
	
	private UserProfile userProfile;
	private UserLoginAttemptCount userLoginAttemptCount;
	private UserCodes userCodes;
	private UserLoginFeed userLoginFeed;
	private Set<UserToRole> userToRoles = new HashSet<UserToRole>(0);
	//private Set<Roles> roleses = new HashSet<Roles>(0);
	
	
	private Set<DriverAgencyIdentityProfile> driverAgencyIdentityProfiles = new HashSet<DriverAgencyIdentityProfile>(
			0);
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<DriverToDriverAgency> driverToDriverAgencies = new HashSet<DriverToDriverAgency>(
			0);
	private Set<DriverIdentityProfile> driverIdentityProfiles = new HashSet<DriverIdentityProfile>(
			0);
	

	public Users() {
	}

	public Users(String email, String username, String password,
			String phoneNumber, boolean isEmailVerified,
			boolean isPhoneNumberVerified, Date emailVerifiedTs,
			Date phoneNumberVerifiedTs, Date registeredTs, Date updatedTs) {
		this.email = email;
		this.username = username;
		this.password = password;
		this.phoneNumber = phoneNumber;
		this.isEmailVerified = isEmailVerified;
		this.isPhoneNumberVerified = isPhoneNumberVerified;
		this.emailVerifiedTs = emailVerifiedTs;
		this.phoneNumberVerifiedTs = phoneNumberVerifiedTs;
		this.registeredTs = registeredTs;
		this.updatedTs = updatedTs;
	}

	public Users(String email, String username, String password,
			String phoneNumber, boolean isEmailVerified,
			boolean isPhoneNumberVerified, boolean isAccountLocked,
			Date emailVerifiedTs,
			Date phoneNumberVerifiedTs, Date registeredTs, Date updatedTs,
			UserProfile userProfile,
			UserLoginAttemptCount userLoginAttemptCount,
			Set<DriverAgencyIdentityProfile> driverAgencyIdentityProfiles,
			Set<Address> addresses, Set<UserToRole> userToRoles,
			UserCodes userCodes,
			Set<DriverToDriverAgency> driverToDriverAgencies,
			Set<DriverIdentityProfile> driverIdentityProfiles,
			UserLoginFeed userLoginFeed) {
		this.email = email;
		this.username = username;
		this.password = password;
		this.phoneNumber = phoneNumber;
		this.isAccountLocked = isAccountLocked;
		this.isEmailVerified = isEmailVerified;
		this.isPhoneNumberVerified = isPhoneNumberVerified;
		this.emailVerifiedTs = emailVerifiedTs;
		this.phoneNumberVerifiedTs = phoneNumberVerifiedTs;
		this.registeredTs = registeredTs;
		this.updatedTs = updatedTs;
		this.userProfile = userProfile;
		this.userLoginAttemptCount = userLoginAttemptCount;
		this.driverAgencyIdentityProfiles = driverAgencyIdentityProfiles;
		this.addresses = addresses;
		this.userToRoles = userToRoles;
		this.userCodes = userCodes;
		this.driverToDriverAgencies = driverToDriverAgencies;
		this.driverIdentityProfiles = driverIdentityProfiles;
		this.userLoginFeed = userLoginFeed;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "phone_number", unique = true, nullable = false, length = 12)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}
	
	@Column(name = "is_account_locked", nullable = false)
	public boolean isAccountLocked() {
		return this.isAccountLocked;
	}

	public void setAccountLocked(boolean isAccountLocked) {
		this.isAccountLocked = isAccountLocked;
	}

	@Column(name = "is_email_verified", nullable = false)
	public boolean isIsEmailVerified() {
		return this.isEmailVerified;
	}

	public void setIsEmailVerified(boolean isEmailVerified) {
		this.isEmailVerified = isEmailVerified;
	}

	@Column(name = "is_phone_number_verified", nullable = false)
	public boolean isIsPhoneNumberVerified() {
		return this.isPhoneNumberVerified;
	}

	public void setIsPhoneNumberVerified(boolean isPhoneNumberVerified) {
		this.isPhoneNumberVerified = isPhoneNumberVerified;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "email_verified_ts", nullable = false, length = 19)
	public Date getEmailVerifiedTs() {
		return this.emailVerifiedTs;
	}

	public void setEmailVerifiedTs(Date emailVerifiedTs) {
		this.emailVerifiedTs = emailVerifiedTs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "phone_number_verified_ts", nullable = false, length = 19)
	public Date getPhoneNumberVerifiedTs() {
		return this.phoneNumberVerifiedTs;
	}

	public void setPhoneNumberVerifiedTs(Date phoneNumberVerifiedTs) {
		this.phoneNumberVerifiedTs = phoneNumberVerifiedTs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registered_ts", nullable = false, length = 19)
	public Date getRegisteredTs() {
		return this.registeredTs;
	}

	public void setRegisteredTs(Date registeredTs) {
		this.registeredTs = registeredTs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_ts", nullable = false, length = 19)
	public Date getUpdatedTs() {
		return this.updatedTs;
	}

	public void setUpdatedTs(Date updatedTs) {
		this.updatedTs = updatedTs;
	}

	@Cascade(value = CascadeType.ALL)
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<DriverAgencyIdentityProfile> getDriverAgencyIdentityProfiles() {
		return this.driverAgencyIdentityProfiles;
	}

	public void setDriverAgencyIdentityProfiles(
			Set<DriverAgencyIdentityProfile> driverAgencyIdentityProfiles) {
		this.driverAgencyIdentityProfiles = driverAgencyIdentityProfiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}
	
	@Cascade(CascadeType.ALL)
	@Fetch(FetchMode.SELECT)
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	public Set<UserToRole> getUserToRoles() {
		return this.userToRoles;
	}

	public void setUserToRoles(Set<UserToRole> userToRoles) {
		this.userToRoles = userToRoles;
	}
	
	/*@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "user_to_role", 
	joinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) }, 
	inverseJoinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Roles> getRoleses() {
		return roleses;
	}


	public void setRoleses(Set<Roles> roleses) {
		this.roleses = roleses;
	}
*/

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	public Set<DriverToDriverAgency> getDriverToDriverAgencies() {
		return this.driverToDriverAgencies;
	}

	public void setDriverToDriverAgencies(
			Set<DriverToDriverAgency> driverToDriverAgencies) {
		this.driverToDriverAgencies = driverToDriverAgencies;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	public Set<DriverIdentityProfile> getDriverIdentityProfiles() {
		return this.driverIdentityProfiles;
	}

	public void setDriverIdentityProfiles(
			Set<DriverIdentityProfile> driverIdentityProfiles) {
		this.driverIdentityProfiles = driverIdentityProfiles;
	}

	@Cascade(value = CascadeType.ALL)
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserLoginAttemptCount getUserLoginAttemptCount() {
		return this.userLoginAttemptCount;
	}

	public void setUserLoginAttemptCount(
			UserLoginAttemptCount userLoginAttemptCount) {
		this.userLoginAttemptCount = userLoginAttemptCount;
	}
	
	@Cascade(value = CascadeType.ALL)
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserCodes getUserCodes() {
		return this.userCodes;
	}

	public void setUserCodes(UserCodes userCodes) {
		this.userCodes = userCodes;
	}
	
	@Cascade(value = CascadeType.ALL)
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public UserLoginFeed getUserLoginFeed() {
		return this.userLoginFeed;
	}

	public void setUserLoginFeed(UserLoginFeed userLoginFeed) {
		this.userLoginFeed = userLoginFeed;
	}

}
