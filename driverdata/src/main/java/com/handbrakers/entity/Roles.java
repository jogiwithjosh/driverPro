package com.handbrakers.entity;

// Generated 9 Sep, 2016 2:56:29 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Roles generated by hbm2java
 */
@Entity
@Table(name = "roles")
public class Roles implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -271726549642547906L;
	private long roleId;
	private String roleName;
	private Date createdTs;
	private Set<UserToRole> userToRoles = new HashSet<UserToRole>(0);

	public Roles() {
	}

	public Roles(long roleId, String roleName, Date createdTs) {
		this.roleId = roleId;
		this.roleName = roleName;
		this.createdTs = createdTs;
	}

	public Roles(long roleId, String roleName, Date createdTs,
			Set<UserToRole> userToRoles) {
		this.roleId = roleId;
		this.roleName = roleName;
		this.createdTs = createdTs;
		this.userToRoles = userToRoles;
	}

	@Id
	@Column(name = "role_id", unique = true, nullable = false)
	public long getRoleId() {
		return this.roleId;
	}

	public void setRoleId(long roleId) {
		this.roleId = roleId;
	}

	@Column(name = "role_name", nullable = false)
	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_ts", nullable = false, length = 19)
	public Date getCreatedTs() {
		return this.createdTs;
	}

	public void setCreatedTs(Date createdTs) {
		this.createdTs = createdTs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
	public Set<UserToRole> getUserToRoles() {
		return this.userToRoles;
	}

	public void setUserToRoles(Set<UserToRole> userToRoles) {
		this.userToRoles = userToRoles;
	}

}
